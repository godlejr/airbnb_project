version: 0.2

env:
  variables:
    _PROJECT_NAME1: "team02-gateway"
    _PROJECT_NAME2: "team02-message"
    _PROJECT_NAME3: "team02-payment"
    _PROJECT_NAME4: "team02-reservation"
    _PROJECT_NAME5: "team02-taxi"
    _PROJECT_NAME6: "team02-viewpage"
    _PROJECT_NAME1_1: "gateway"
    _PROJECT_NAME2_1: "message"
    _PROJECT_NAME3_1: "payment"
    _PROJECT_NAME4_1: "reservation"
    _PROJECT_NAME5_1: "taxi"
    _PROJECT_NAME6_1: "viewpage"

phases:
  install:
    runtime-versions:
      java: corretto8
      docker: 18
    commands:
      - echo install kubectl
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $_PROJECT_NAME
      - echo $AWS_ACCOUNT_ID
      - echo $AWS_DEFAULT_REGION
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo start command
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...

      - cd uber/$_PROJECT_NAME1_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME1:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME2_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME2:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME3_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME3:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME4_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME4:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME5_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME5:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../$_PROJECT_NAME6_1
      - mvn package -Dmaven.test.skip=true
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME6:$CODEBUILD_RESOLVED_SOURCE_VERSION  .

      - cd ../../
  post_build:
    commands:
      - echo Pushing the Docker image...

      - cd uber/$_PROJECT_NAME1_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME1:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME2_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME2:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME3_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME3:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME4_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME4:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME5_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME5:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../$_PROJECT_NAME6_1
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$_PROJECT_NAME6:$CODEBUILD_RESOLVED_SOURCE_VERSION

      - cd ../../
      
      - echo connect kubectl
      - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
      - kubectl config set-credentials admin --token="$KUBE_TOKEN"
      - kubectl config set-context default --cluster=k8s --user=admin
      - kubectl config use-context default

      - kubectl apply -f < (istioctl kube-inject -f uber/gateway/kubernetes/deployment.yml) -n uber
      - kubectl apply -f <(istioctl kube-inject -f uber/gateway/kubernetes/service.yaml) -n uber

      - kubectl apply -f <(istioctl kube-inject -f uber/message/kubernetes/deployment.yml) -n uber
      - kubectl apply -f <(istioctl kube-inject -f uber/message/kubernetes/service.yaml) -n uber

      - kubectl apply -f <(istioctl kube-inject -f uber/taxi/kubernetes/deployment.yml) -n uber
      - kubectl apply -f <(istioctl kube-inject -f uber/taxi/kubernetes/service.yaml) -n uber

      - kubectl apply -f <(istioctl kube-inject -f uber/payment/kubernetes/deployment.yml) -n uber
      - kubectl apply -f <(istioctl kube-inject -f uber/payment/kubernetes/service.yaml) -n uber

      - kubectl apply -f <(istioctl kube-inject -f uber/reservation/kubernetes/deployment.yml) -n uber
      - kubectl apply -f <(istioctl kube-inject -f uber/reservation/kubernetes/service.yaml) -n uber

      - kubectl apply -f <(istioctl kube-inject -f uber/viewpage/kubernetes/deployment.yml) -n uber
      - kubectl apply -f <(istioctl kube-inject -f uber/viewpage/kubernetes/service.yaml) -n uber

      - kubectl apply -f <(istioctl kube-inject -f uber/deployall.yml) -n uber
 
#cache:
#  paths:
#    - '/root/.m2/**/*' 